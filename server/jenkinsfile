pipeline {
    agent any

    environment {
        GIT_CREDENTIALS = credentials('Dropzone')  // GitLab 자격증명
    }
    stages {
        stage('Git Clone') {
            steps {
                git branch: 'main', credentialsId: 'Dropzone', url: 'https://lab.ssafy.com/s11-metaverse-game-sub1/S11P21D110'
            }
        }
        stage('Build Docker Images') {
            steps {
                script {
                    sh 'docker-compose build'  // Docker Compose로 MySQL, Redis, Spring Boot 애플리케이션 빌드
                }
            }
        }
        stage('Deploy with Docker Compose') {
            steps {
                script {
                    sh 'docker-compose up -d'  // Docker Compose로 컨테이너를 실행
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    sh './gradlew test'  // Gradle을 통해 Spring Boot 애플리케이션의 테스트 실행
                }
            }
        }
    }
    post {
        always {
            script {
                sh 'docker-compose down'  // 테스트 후 컨테이너를 중지하여 리소스 해제
            }
        }
        failure {
            mail to: 'khg6436@naver.com',
                 subject: "Jenkins Build Failed: ${env.JOB_NAME}",
                 body: "The build for ${env.JOB_NAME} failed. Please check the logs."
        }
    }
}
